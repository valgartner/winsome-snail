---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

const hdImages = {
  portal1: "https://images.unsplash.com/photo-1462331940025-496dfbfc7564?w=2048&q=95",
  portal2: "https://images.unsplash.com/photo-1534796636912-3b95b3ab5986?w=2048&q=95",
  texture: "https://images.unsplash.com/photo-1579546929662-711aa81148cf?w=2048&q=95"
};
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			:root {
				--primary: #2a623d;
				--primary-dark: #1a472a;
				--secondary: #97ce4c;
				--text: #e0e0e0;
				--background: #0d1f13;
				--accent: #44281d;
				--glow: rgba(151, 206, 76, 0.3);
			}

			body {
				margin: 0;
				font-family: 'Atkinson', sans-serif;
				background: var(--background);
				color: var(--text);
				overflow-x: hidden;
			}

			main {
				width: 100%;
				max-width: 100%;
				margin: 0;
				padding: 0;
			}

			.hero-image {
				width: 100%;
				height: 400px;
				position: relative;
				overflow: hidden;
				background: rgba(26, 71, 42, 0.3);
				border-bottom: 1px solid rgba(151, 206, 76, 0.1);
			}

			.hero-image img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				filter: brightness(0.8);
			}

			.prose {
				max-width: 1000px;
				margin: 0 auto;
				padding: 2rem;
				background: rgba(26, 71, 42, 0.3);
				border-radius: 20px;
				margin-top: -60px;
				position: relative;
				z-index: 1;
				border: 1px solid rgba(151, 206, 76, 0.1);
				box-shadow: 
					0 10px 30px rgba(0, 0, 0, 0.3),
					0 0 20px var(--glow);
			}

			.title {
				text-align: center;
				line-height: 1;
				margin-bottom: 2rem;
				padding-bottom: 2rem;
				border-bottom: 1px solid rgba(151, 206, 76, 0.2);
			}

			.title h1 {
				color: var(--secondary);
				font-size: clamp(2rem, 5vw, 3.5rem);
				margin: 0;
				text-shadow: 
					0 0 10px var(--glow),
					0 0 20px var(--glow);
			}

			.date {
				color: rgba(var(--text), 0.7);
				margin: 1rem 0;
				font-size: 1.1rem;
			}

			.last-updated-on {
				font-style: italic;
				color: rgba(var(--text), 0.6);
			}

			/* Article content styles */
			.prose :global(h2) {
				color: var(--secondary);
				font-size: 2rem;
				margin-top: 3rem;
				text-shadow: 0 0 10px var(--glow);
			}

			.prose :global(h3) {
				color: var(--secondary);
				font-size: 1.5rem;
				margin-top: 2rem;
			}

			.prose :global(p) {
				line-height: 1.8;
				margin: 1.5rem 0;
			}

			.prose :global(ul), .prose :global(ol) {
				line-height: 1.8;
				padding-left: 1.5rem;
			}

			.prose :global(li) {
				margin: 0.5rem 0;
			}

			.prose :global(blockquote) {
				border-left: 4px solid var(--secondary);
				margin: 2rem 0;
				padding-left: 1.5rem;
				color: rgba(var(--text), 0.8);
				font-style: italic;
			}

			.prose :global(code) {
				background: rgba(151, 206, 76, 0.1);
				padding: 0.2rem 0.4rem;
				border-radius: 4px;
				font-size: 0.9em;
			}

			.prose :global(pre) {
				background: rgba(26, 71, 42, 0.5);
				padding: 1.5rem;
				border-radius: 10px;
				overflow-x: auto;
				border: 1px solid rgba(151, 206, 76, 0.1);
			}

			.prose :global(pre code) {
				background: none;
				padding: 0;
			}

			.prose :global(img) {
				max-width: 100%;
				height: auto;
				border-radius: 10px;
				margin: 2rem 0;
			}

			.prose :global(hr) {
				border: none;
				border-top: 1px solid rgba(151, 206, 76, 0.2);
				margin: 2rem 0;
			}

			@media (max-width: 768px) {
				.hero-image {
					height: 300px;
				}

				.prose {
					padding: 1.5rem;
					margin-top: -40px;
				}

				.title h1 {
					font-size: 2rem;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>